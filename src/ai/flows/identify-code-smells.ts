// This file is generated by Firebase Studio.
'use server';

/**
 * @fileOverview Identifies code smells in a given code diff using Gemini.
 *
 * - identifyCodeSmells - A function that takes a code diff as input and returns a summary of identified code smells.
 * - IdentifyCodeSmellsInput - The input type for the identifyCodeSmells function.
 * - IdentifyCodeSmellsOutput - The return type for the identifyCodeSmells function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const IdentifyCodeSmellsInputSchema = z.object({
  diffText: z
    .string()
    .describe('The diff text from a pull request.'),
});
export type IdentifyCodeSmellsInput = z.infer<typeof IdentifyCodeSmellsInputSchema>;

const IdentifyCodeSmellsOutputSchema = z.object({
  summary: z.string().describe('A summary of the code smells identified in the diff text.'),
});
export type IdentifyCodeSmellsOutput = z.infer<typeof IdentifyCodeSmellsOutputSchema>;

export async function identifyCodeSmells(input: IdentifyCodeSmellsInput): Promise<IdentifyCodeSmellsOutput> {
  return identifyCodeSmellsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'identifyCodeSmellsPrompt',
  input: {schema: IdentifyCodeSmellsInputSchema},
  output: {schema: IdentifyCodeSmellsOutputSchema},
  prompt: `You are a code review assistant. Analyze the following code diff and identify any code smells, potential bugs, or areas for improvement. Provide a summary of your findings.

Diff Text:
{{{diffText}}}`,
});

const identifyCodeSmellsFlow = ai.defineFlow(
  {
    name: 'identifyCodeSmellsFlow',
    inputSchema: IdentifyCodeSmellsInputSchema,
    outputSchema: IdentifyCodeSmellsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
